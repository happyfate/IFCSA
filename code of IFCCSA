function [TFCSA_score, TFCSA_Pos, TFCSA_curve] = TFCSA(TestFitness, N, M, D, xmax, xmin, choose)

APmin = 0.05;
APmax = 0.25;
RandProbability = 0.01;
L = 2;

New_x = xmin + (xmax - xmin) .* rand(N, D);
%计算初始适应度值
for j = 1 :N
    New_x_CSA_fitness(j) = TestFitness(New_x(j,:), choose);
end
[~,index] = sort(New_x_CSA_fitness, 'ascend');
count = index(1);
%%


%记录原始位置
mem = New_x;
fitness = New_x_CSA_fitness;
gbest = mem(count,:);
%主循环
for t = 1:M
    %ceil想上取整
    num=ceil(N*rand(1,N));  %生成随机候选乌鸦以追随（追逐）
    AP = 1 / ((APmin * ((APmax - APmin) / RandProbability) * gammainc(RandProbability, (1 - (t / M)))) * 100);
    for i=1:N
        r2 = rand;
        if r2>=AP
            xnew(i,:) = New_x(i,:)+ L .* rand .* (mem(num(i),:) - New_x(i,:));
        else
            xtemp = rand();
            Cauchy_x=tan((xtemp - 0.5) * pi);
            xnew(i,:) = mem(count,:) + New_x(i,:) .* Cauchy_x;
        end
        for j = 1 : D
            if xnew(i,j) >= xmax
                xnew(i, j) = mem(i,j);
            elseif xnew(i,j) <= xmin
                xnew(i, j) = mem(i,j);
            end
        end
        New_x_CSA_fitness(i) = TestFitness(xnew(i,:), choose);    %计算更新位置后每只乌鸦的适应度值
    end
    
%%
    %更新位置和记忆
    for i = 1:N
        %判断新产生的位置是否越界，越界的话位置保持原来的位置不变，不越界则更新
        %xnew(i,:) >= xmin && xnew(i,:) <= xmax表示xnew矩阵中的每个元素都要在
        %(xmin, xmax)这个区间
        if xnew(i,:) >= xmin & xnew(i,:) <= xmax
            New_x(i,:) = xnew(i,:);
            if New_x_CSA_fitness(i) < fitness(i)
                mem(i,:) = xnew(i,:);           %乌鸦更新位置
                fitness(i) = New_x_CSA_fitness(i);    %乌鸦更行位置后的适应度
            end
        end 
    end
    [~,index1] = sort(fitness, 'ascend');
    count = index1(1);


%%
    TFCSA_curve(t) = (min(fitness));
    TFCSA_score = (min(fitness));
end
TFCSA_Pos = mem(count,:);
end




